---
export const prerender = true;

import { getCollection, getEntry } from 'astro:content';
import { Image } from 'astro:assets';
import { SocialShare } from 'astro-social-share';
import BlogPostDate from '../../components/blog-post-date.astro';
import MainLayout from '../../layouts/main-layout.astro';
import FinalEngagement from '../../components/final-engagement.astro';

// 1. Get the slug from the incoming server request
const { slug } = Astro.params;
if (slug === undefined) {
  throw new Error('Slug is required');
}

// The getStaticPaths() is required for static Astro sites.
// If using SSR, you will not need this function.
export async function getStaticPaths() {
  const posts = await getCollection('blog', (post) => !post.data.draft);

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// 2. Query for the entry directly using the request slug
const post = await getEntry('blog', slug);
// 3. Redirect if the entry does not exist
if (post === undefined) {
  return Astro.redirect('/404');
}

const { Content } = await post.render();

const featuredImage = post.data.image;
---

<MainLayout
  title={post.data.title}
  description={post.data.excerpt}
  keywords={post.data.tags ? post.data.tags.join(', ') : ''}
  ogImage={featuredImage.src}
>
  <article class="post full">
    <header>
      <Image
        src={featuredImage}
        alt={post.data.title}
        layout="responsive"
        class="hero-image"
        widths={[480, featuredImage.width]}
        sizes={`(max-width: 480px) 480px, ${featuredImage.width}px`}
      />
      <div class="wrapper content">
        <BlogPostDate date={post.data.posted} />
        <h1 class="heading1">{post.data.title}</h1>
        <SocialShare title={post.data.title} description={post.data.excerpt} />
      </div>
    </header>
    <div class="wrapper content">
      <Content />
      <SocialShare title={post.data.title} description={post.data.excerpt} />
    </div>
    <FinalEngagement />
  </article>
</MainLayout>
