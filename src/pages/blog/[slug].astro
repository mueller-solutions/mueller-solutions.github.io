---
import BlogPostDate from '../../components/blog-post-date.astro';
import HeroSection from '../../components/hero-section.astro';
import MainLayout from '../../layouts/main-layout.astro';
import blogService from '../../services/blog.service';

const { slug } = Astro.params;

// The getStaticPaths() is required for static Astro sites.
// If using SSR, you will not need this function.
export async function getStaticPaths() {
  const { posts } = await blogService.getPosts();

  return posts.map((post: any) => ({
    params: { slug: post.slug },
    props: { post: post },
  }));
}

const [post] = await blogService.getPost(slug!);
const featuredImage = post._embedded['wp:featuredmedia'][0].source_url;
const preloadImageUrl = featuredImage.split('?')[0];
const preloadFileType = featuredImage.split('.').pop()?.split('?')[0];

// Parse all images in post.content.rendered
const imageUrls = [...post.content.rendered.matchAll(/<img[^>]+src="([^">]+)"/g)].map((match) => match[1]);
const preloadTags = imageUrls
  .map(
    (url) =>
      `<link rel="preload" as="image" href="${url.split('?')[0]}" type="image/${url.split('.').pop()?.split('?')[0]}" crossorigin="anonymous" />`,
  )
  .join('\n');
---

<MainLayout
  title={post.title.rendered}
  description={post.excerpt.rendered}
  keywords={post.tags}
  ogImage={featuredImage}
>
  <link
    slot="html-head"
    rel="preload"
    as="image"
    href={preloadImageUrl}
    type={`image/${preloadFileType}`}
    crossorigin="anonymous"
  />
  <!-- Preload tags for images in post content -->
  <Fragment slot="html-head" set:html={preloadTags} />
  <article class="post full">
    <HeroSection image={featuredImage} remoteImage />
    <div class="wrapper content">
      <header>
        <BlogPostDate date={post.date} />
        <h1 class="heading1" set:html={post.title.rendered} />
      </header>
      <div class="excerpt">
        <Fragment set:html={post.excerpt.rendered} />
      </div>
      <Fragment set:html={post.content.rendered} />
    </div>
  </article>
</MainLayout>
