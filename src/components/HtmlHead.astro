---
const { title, description } = Astro.props;

const websiteTitle =
  "MUELLER | Expert Frontend Consulting | Fast & Stable Web App Development | Boost Performance & Speed";
const htmlTitle = title ? `${title} | ${websiteTitle}` : websiteTitle;
const htmlDescription = description
  ? description
  : "Boost your web app development with expert frontend consulting. We help you build faster, more stable applications with performance optimization and cutting-edge solutions. Achieve your goals with ease and efficiency.";
---

<meta charset="UTF-8" />
<meta
  name="viewport"
  content="minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no"
/>
<title>{htmlTitle}</title>
<meta name="description" content={htmlDescription} />
<meta
  name="keywords"
  content="frontend consulting, web app development, performance optimization, fast web apps, stable web applications, frontend expertise, web performance, speed optimization, custom web solutions, web development consulting"
/>
<meta name="author" content="Mueller Solutions, LLC. Austin, TX" />
<link
  rel="apple-touch-icon"
  sizes="57x57"
  href="/assets/apple-icon-57x57.png"
/>
<link
  rel="apple-touch-icon"
  sizes="60x60"
  href="/assets/apple-icon-60x60.png"
/>
<link
  rel="apple-touch-icon"
  sizes="72x72"
  href="/assets/apple-icon-72x72.png"
/>
<link
  rel="apple-touch-icon"
  sizes="76x76"
  href="/assets/apple-icon-76x76.png"
/>
<link
  rel="apple-touch-icon"
  sizes="114x114"
  href="/assets/apple-icon-114x114.png"
/>
<link
  rel="apple-touch-icon"
  sizes="120x120"
  href="/assets/apple-icon-120x120.png"
/>
<link
  rel="apple-touch-icon"
  sizes="144x144"
  href="/assets/apple-icon-144x144.png"
/>
<link
  rel="apple-touch-icon"
  sizes="152x152"
  href="/assets/apple-icon-152x152.png"
/>
<link
  rel="apple-touch-icon"
  sizes="180x180"
  href="/assets/apple-icon-180x180.png"
/>
<link
  rel="icon"
  type="image/png"
  sizes="16x16"
  href="/assets/favicon-16x16.png"
/>
<link
  rel="icon"
  type="image/png"
  sizes="32x32"
  href="/assets/favicon-32x32.png"
/>
<link
  rel="icon"
  type="image/png"
  sizes="96x96"
  href="/assets/favicon-96x96.png"
/>
<link
  rel="icon"
  type="image/png"
  sizes="192x192"
  href="/assets/android-icon-192x192.png"
/>

<link rel="shortcut icon" href="/assets/favicon.ico" />
<link rel="manifest" href="./site.webmanifest" />
<link
  rel="preload"
  fetchpriority="high"
  as="image"
  href="/images/hero-background.webp"
  type="image/webp"
/>
<link
  rel="preload"
  fetchpriority="high"
  as="image"
  href="/images/florian-mueller.webp"
  type="image/webp"
/>
<!-- Google tag (gtag.js) -->
<script
  async
  is:inline
  src="https://www.googletagmanager.com/gtag/js?id=G-777G6E86XK"></script>
<script lang="js" is:inline>
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag("js", new Date());

  gtag("config", "G-777G6E86XK");
</script>
<!-- Hotjar Tracking Code for Site 5088047 (name missing) -->
<script lang="js" is:inline>
  (function (h, o, t, j, a, r) {
    h.hj =
      h.hj ||
      function () {
        (h.hj.q = h.hj.q || []).push(arguments);
      };
    h._hjSettings = { hjid: 5088047, hjsv: 6 };
    a = o.getElementsByTagName("head")[0];
    r = o.createElement("script");
    r.async = 1;
    r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
    a.appendChild(r);
  })(window, document, "https://static.hotjar.com/c/hotjar-", ".js?sv=");
</script>
<link
  href="https://assets.calendly.com/assets/external/widget.css"
  rel="stylesheet"
/>
<script
  src="https://assets.calendly.com/assets/external/widget.js"
  type="text/javascript"
  is:inline
  defer
  async></script>
<script is:inline lang="js">
  window.addEventListener("DOMContentLoaded", () => {
    const navLinkEls = document.querySelectorAll(".nav-link");
    const sectionEls = document.querySelectorAll(".section");
    const headerEl = document.querySelector(".site-header");
    const headerHeight = headerEl ? headerEl.offsetHeight * 1.5 : 0;
    const logoLinkEls = document.querySelectorAll(".logo-link");
    const technologyLinkEls = document.querySelectorAll(".technology-link");
    const technologiesEls = document.querySelectorAll(".technology-article");

    // Highlight the active section in the navigation
    let currentSection = "top";
    window.addEventListener("scroll", () => {
      sectionEls.forEach((sectionEl) => {
        const windowScrollY = window.scrollY + headerHeight;

        if (windowScrollY >= sectionEl.offsetTop) {
          currentSection = sectionEl.id;
        }
      });

      navLinkEls.forEach((navLinkEl) => {
        navLinkEl.classList.remove("active");
        if (navLinkEl.href.includes(`#${currentSection}`)) {
          navLinkEl.classList.add("active");
        }
      });
    });

    // Smooth scroll to sections
    navLinkEls.forEach((navLinkEl) => {
      navLinkEl.addEventListener("click", (event) => {
        event.preventDefault();
        const targetId = navLinkEl.href.split("#")[1];
        const targetEl = document.getElementById(targetId);
        const targetTop = targetEl?.offsetTop || 0;
        const targetY = targetTop - headerHeight;

        window.scrollTo({ top: targetY, behavior: "smooth" });
      });
    });

    // Smooth scroll to top
    logoLinkEls.forEach((logoLinkEl) => {
      logoLinkEl.addEventListener("click", (event) => {
        event.preventDefault();
        window.scrollTo({ top: 0, behavior: "smooth" });
      });
    });

    // Show technology articles
    technologyLinkEls.forEach((technologyLinkEl) => {
      technologyLinkEl.addEventListener("click", (event) => {
        event.preventDefault();

        technologyLinkEl.classList.add("active");
        const targetId = technologyLinkEl.href.split("#")[1];

        technologiesEls.forEach((article) => {
          article.classList.remove("active");

          if (article.id == targetId) {
            article.classList.add("active");
          }
        });
      });

      technologyLinkEl.addEventListener("blur", (event) => {
        event.preventDefault();

        technologyLinkEl.classList.remove("active");

        setTimeout(() => {
          const targetId = technologyLinkEl.href.split("#")[1];

          technologiesEls.forEach((article) => {
            if (
              article.id == targetId &&
              article.classList.contains("active")
            ) {
              article.classList.remove("active");
            }
          });
        }, 200);
      });
    });
  });
</script>
